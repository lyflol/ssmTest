<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
          xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
          id="WebApp_ID" version="3.0">
  <display-name>Archetype Created Web Application</display-name>
<!--注册sevlet组件-->
  <servlet>
     <servlet-name>Dispatcher</servlet-name>
     <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--配置springMVC需要加载的配置文件-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:/spring/spring-*.xml</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>Dispatcher</servlet-name>
    <url-pattern>/</url-pattern>
    <!--如此配置后，会把所有的请求都会进行拦截，交给spring去处理
    。而spring所有请求的URL都是在controller中使用注解@RequestMapping标明，
    所以这样的情况下访问静态资源是访问不到的。静态资源（图片，js文件，css文件）解决方法在spring-mvc中-->
  </servlet-mapping>
<!--过滤器-->
<filter>
  <filter-name>encodingFilter</filter-name>
  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  <init-param>
    <param-name>encoding</param-name>
    <param-value>utf-8</param-value>
  </init-param>
</filter>
 <filter-mapping>
   <filter-name>encodingFilter</filter-name>
   <url-pattern>/</url-pattern>
 </filter-mapping>
</web-app>
